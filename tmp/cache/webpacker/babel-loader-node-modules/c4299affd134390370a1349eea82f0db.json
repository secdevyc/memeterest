{"ast":null,"code":"var _jsxFileName = \"/Users/yc/dev/memeterest/app/javascript/components/Form.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// DEPENDENCIES //\nimport React from 'react'; // COMPONENT CLASS //\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  // STATE //\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      // prevent default form submit action\n      e.preventDefault(); // if view is addMeme\n\n      if (_this.props.view.page === 'addMeme') {\n        // create a meme\n        _this.props.handleCreate(_this.state);\n      } else if (_this.props.view.page === 'editMeme') {\n        // else if the view is editMeme\n        // update the meme\n        _this.props.handleUpdate(_this.state);\n      }\n    };\n\n    _this.state = {\n      name: '',\n      image: '',\n      text: '',\n      id: null\n    };\n    return _this;\n  } // handlers //\n\n\n  _createClass(Form, [{\n    key: \"componentDidMount\",\n    // life cycles\n    value: function componentDidMount() {\n      this.setState({\n        name: this.props.formInputs.name,\n        image: this.props.formInputs.image,\n        text: this.props.formInputs.text,\n        id: this.props.formInputs.id\n      });\n    } // render //\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"your name\",\n        id: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Image\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"meme image\",\n        id: \"image\",\n        value: this.state.image,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Text\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"meme text\",\n        id: \"text\",\n        value: this.state.text,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: this.props.view.page === 'addMeme' ? \"Add Meme\" : \"Update Meme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(React.Component); // EXPORT\n\n\nexport default Form;","map":{"version":3,"sources":["/Users/yc/dev/memeterest/app/javascript/components/Form.js"],"names":["React","Form","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","view","page","handleCreate","state","handleUpdate","name","image","text","formInputs","Component"],"mappings":"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","sourcesContent":["// DEPENDENCIES //\nimport React from 'react'\n\n// COMPONENT CLASS //\nclass Form extends React.Component {\n  // STATE //\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      image: '',\n      text: '',\n      id: null\n    }\n  }\n  // handlers //\n  handleChange = (e) => {\n    this.setState({[e.target.id] : e.target.value})\n  }\n\n  // handles submit\n  handleSubmit = (e) => {\n    // prevent default form submit action\n    e.preventDefault()\n    // if view is addMeme\n    if(this.props.view.page === 'addMeme') {\n      // create a meme\n      this.props.handleCreate(this.state)\n    } else if (this.props.view.page === 'editMeme') { // else if the view is editMeme\n      // update the meme\n      this.props.handleUpdate(this.state)\n    }\n  }\n  // life cycles\n  componentDidMount() {\n    this.setState({\n      name: this.props.formInputs.name,\n      image: this.props.formInputs.image,\n      text: this.props.formInputs.text,\n      id: this.props.formInputs.id\n    })\n  }\n  // render //\n  render () {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"inputs\">\n          <label htmlFor=\"name\">Name</label>\n          <input type=\"text\"\n                 placeholder=\"your name\"\n                 id=\"name\"\n                 value={this.state.name}\n                 onChange={this.handleChange}\n                 />\n        </div>\n        <div className=\"inputs\">\n          <label htmlFor=\"image\">Image</label>\n          <input type=\"text\"\n                 placeholder=\"meme image\"\n                 id=\"image\"\n                 value={this.state.image}\n                 onChange={this.handleChange}\n                 />\n        </div>\n\n        <div className=\"inputs\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\"\n                 placeholder=\"meme text\"\n                 id=\"text\"\n                 value={this.state.text}\n                 onChange={this.handleChange}\n                 />\n        </div>\n\n        <div className=\"inputs\">\n          <input className=\"submit\" type=\"submit\" value={this.props.view.page === 'addMeme' ? \"Add Meme\" : \"Update Meme\"}/>\n        </div>\n      </form>\n    )\n  }\n}\n\n// EXPORT\nexport default Form\n"]},"metadata":{},"sourceType":"module"}